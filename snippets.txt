ASP.NET Core workshop

1) Guest Model (Guest.cs)

    public class Guest
    {
        public int Id {get;set;}
        public string Code {get;set;}
        public string Name {get;set;}
        public bool IsAttending {get;set;}
        public EMealType MealType {get;set;}
        public string Comments {get;set;}
        
        public bool HasResponded {get;set;}
    }

    public enum EMealType {
        Fish,
        Meat,
        Vegetarian
    }

2) Database (ApplicationDbContext.cs)

    public DbSet<Guest> Guests {get;set;}

3) Migrations

Run: dotnet ef migrations add InitialMigratoin
     dotnet ef database update

4) Admin Controller

        [Authorize]

        private readonly ApplicationDbContext _context;

        public AdminController(ApplicationDbContext context)
        {
            _context = context;
        }

        public IActionResult Index()
        {
            return View(_context.Guests.ToList());
        }

        [HttpPost]
        public IActionResult AddGuest([FromForm] string code, string name)
        {
             var guest = new Guest();
            guest.Code = code;
            guest.Name = name;
            _context.Guests.Add(guest);
            _context.SaveChanges();

            return View("Index", _context.Guests.ToList());
        }

5) Admin View

 @model List<Guest>

 @foreach (var guest in Model)
    {
        <tr>
            <td>@guest.Name</td>
            <td>@guest.Code</td>
            
            @if (guest.HasResponded) 
            {
                if (guest.IsAttending) 
                {
                    <td>Yes</td>
                }
                else
                {
                    <td>No</td>
                }
            }
            else 
            {
                <td>No response yet</td>
            }
            
            @if (guest.HasResponded && guest.IsAttending)
            {
            <td>@guest.MealType.ToString()</td>
            }
            else 
            {
                <td></td>
            }
            <td>@guest.Comments</td>     
        </tr>
    }


6) Add new guest form

<form class="ui form" asp-action="AddGuest">
     <div class="field">
    <label>Name</label>
    <input type="text" name="name" placeholder="Name">
  </div>
  <div class="field">
    <label>Code</label>
    <input type="text" name="code" placeholder="Code">
  </div>

  <button class="ui button" type="submit">Save</button>
</form>

7) Guest Controller

        private readonly ApplicationDbContext _context;

        public GuestController(ApplicationDbContext context) 
        {
            _context = context;
        }

        [HttpPost]
        public IActionResult Index([FromForm] string code)
        {
            var guest = _context.Guests.FirstOrDefault(x => x.Code == code);

            if (guest == null)
            {
                return NotFound();
            }

            return View(guest);
        }

        [HttpPost]
        public IActionResult SaveResponse([FromForm] int id, bool isAttending, EMealType mealType, string comments)
        {
            var guest = _context.Guests.FirstOrDefault(x => x.Id == id);
            
            guest.IsAttending = isAttending;
            guest.MealType = mealType;
            guest.Comments = comments;
            guest.HasResponded = true;

             _context.Guests.Update(guest);
            _context.SaveChanges();

            return View();
        }

8) Enter code form (home/index)

    <form asp-controller="Guest" asp-action="Index">
        <input name="code" type="text" placeholder="Your welcome code">
    </form>

9) Response form (guest/index)

         <form class="ui form" asp-action="SaveResponse">
            <input type="hidden" name="id" value="@Model.Id">
            <div class="field">
                <label>Welcome @Model.Name</label>
            </div>
            <div class="field">
                <label>Will you be attending?</label>
                <select name="isAttending" class="ui dropdown">
                    <option value=true>Yes</option>
                    <option value=false>No</option>
                </select>
            </div>

             <div class="grouped fields">
                 <label>Meal preference</label>
                 <select name="mealType" class="ui dropdown">
                     <option value=0>Fish</option>
                     <option value=1>Meat</option>
                     <option value=2>Vegetarian</option>
                </select>
               
            </div>
            <div class="field">
                <label>Comments (food allergies, special arrangements, etc)</label>
                <textarea name="comments" rows="3"></textarea>
            </div>
            <button class="ui button" type="submit">Submit</button>
            </form>
